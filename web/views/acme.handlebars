<h1 class="text-center">Certificate Manager (Greenlock)</h1>
<div class="row">
    <div class="col">
        <a href="/acme/new" class="btn btn-primary">New Certificate</a>
        {{#acme}}
        <form action="/acme" method="POST">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Manager Settings:</h5>
                    <p class="card-text">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="enabled" {{#if enabled}}checked{{/if}}
                            id="enabledCheck">
                        <label class="form-check-label" for="enabledCheck">
                            Enabled
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="autodetect" {{#if autodetect}}checked{{/if}}
                            id="autodetectCheck" disabled>
                        <label class="form-check-label" for="autodetectCheck">
                            Automatically manage certificates for all configured domains. (coming soon)
                        </label>
                    </div>
                    Using ACME Service: <a href="#" id="serviceName" target="_blank"></a>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="agreeToTerms" {{#if
                            agreeToTerms}}checked{{/if}} id="agreeToTermsCheck">
                        <label class="form-check-label" for="agreeToTermsCheck">
                            Agree to Terms (<a href="#" id="tosLink" target="_blank">View Terms</a>)
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="staging" {{#if staging}}checked{{/if}}
                            id="stagingCheck">
                        <label class="form-check-label" for="stagingCheck">
                            Staging Server
                        </label>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" name="email" value="{{email}}">
                    </div>
                    <div class="mb-3">
                        <label for="checkInterval" class="form-label">Renew Check Interval (Days)</label>
                        <input type="number" class="form-control" id="checkInterval" name="checkInterval"
                            value="{{checkInterval}}">
                    </div>
                    </p>
                    <button type="submit" class="btn btn-success" disabled>Save</button>
                </div>
            </div>
        </form>
        <script>
            fetch("{{directoryUrl}}")
                .then(response => response.json())
                .then(data => {
                    if (data.meta && data.meta.termsOfService) {
                        document.getElementById('tosLink').href = data.meta.termsOfService;
                        document.getElementById('serviceName').innerHTML = data.meta.website;
                        document.getElementById('serviceName').href = data.meta.website;
                    }
                })
                .catch(err => console.error('Failed to load terms:', err));
        </script>
        {{!-- {{#if enabled}} --}}
        {{#each domains}}
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Certificate {{certificate}}:</h5>
                <p class="card-text">
                    Domains:
                    {{#each entries}}
                    {{this}}{{#unless @last}}, {{/unless}}
                    {{/each}}
                    <br>
                    Paths:<br>
                    - Key: "certs/acme/live/{{certificate}}/privkey.pem"
                    <button class="btn btn-sm btn-info copy-btn"
                        data-copy="certs/acme/live/{{certificate}}/privkey.pem">Copy</button><br>
                    - Cert: "certs/acme/live/{{certificate}}/fullchain.pem"
                    <button class="btn btn-sm btn-info copy-btn"
                        data-copy="certs/acme/live/{{certificate}}/fullchain.pem">Copy</button><br>
                    - Chain/CA: "certs/acme/live/{{certificate}}/chain.pem"
                    <button class="btn btn-sm btn-info copy-btn"
                        data-copy="certs/acme/live/{{certificate}}/chain.pem">Copy</button>
                </p>
                <a href="/acme/{{@index}}/edit" class="btn btn-primary">Edit</a>
                <a href="#" onclick="deleteItem('{{@index}}', event)" class="btn btn-danger">Delete</a>
            </div>
        </div>
        {{/each}}
        {{else}}
        <p>Module Disabled</p>
        {{!-- {{/if}} --}}
        {{/acme}}
    </div>
</div>

<script>
    // Function to delete an item
    function deleteItem(id, event) {
        event.preventDefault();
        if (confirm('Are you sure you want to delete this certificate?')) {
            fetch('/acme/' + id + '/delete', { method: 'POST' })
                .then(() => window.location.reload());
        }
    }
    // Add event listeners for all copy buttons
    document.addEventListener('DOMContentLoaded', () => {
        const copyButtons = document.querySelectorAll('.copy-btn');
        copyButtons.forEach(button => {
            button.addEventListener('click', (event) => {
                const textToCopy = button.getAttribute('data-copy');
                navigator.clipboard.writeText(textToCopy)
                    .then(() => {
                        // alert(`Copied to clipboard: ${textToCopy}`);
                    })
                    .catch(err => {
                        console.error('Failed to copy text: ', err);
                    });
            });
        });
    });
</script>